import os
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url  # üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
BASE_DIR = Path(__file__).resolve().parent.parent

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv(BASE_DIR / ".env")

# ==============================
# üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
# ==============================
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

SECRET_KEY = os.getenv("SECRET_KEY")
if not SECRET_KEY:
    raise ValueError("SECRET_KEY is not set in .env file")

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "").split(",") if os.getenv("ALLOWED_HOSTS") else []

# ==============================
# üì¶ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# ==============================
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",   # üëà CORS –∑–∞—â–∏—Ç–∞
    "api",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",  # üëà CORS Middleware
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

# ==============================
# üåê CORS / CSRF
# ==============================
CORS_ALLOW_ALL_ORIGINS = DEBUG  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å
CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "").split(",")

# ==============================
# üóÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (Supabase / —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π DATABASE_URL)
# ==============================
DATABASES = {
    "default": dj_database_url.config(
        default=os.getenv("DATABASE_URL") or os.getenv("SUPABASE_DATABASE_URL"),
        conn_max_age=600,
        ssl_require=True
    )
}

# ==============================
# üìÇ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏ –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
# ==============================
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# ==============================
# üìä –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å–æ–ª—å)
# ==============================
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
}

# ==============================
# üåç –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
# ==============================
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ==============================
# üìÇ WSGI
# ==============================
WSGI_APPLICATION = "backend.wsgi.application"